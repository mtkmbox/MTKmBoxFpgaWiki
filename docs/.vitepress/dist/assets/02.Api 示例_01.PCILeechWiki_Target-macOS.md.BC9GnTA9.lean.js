import{_ as a,c as t,a2 as o,o as r}from"./chunks/framework.8ehLuTaE.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{"outline":[2,3]},"headers":[],"relativePath":"02.Api 示例/01.PCILeechWiki/Target-macOS.md","filePath":"02.Api 示例/01.PCILeechWiki/Target-macOS.md"}'),i={name:"02.Api 示例/01.PCILeechWiki/Target-macOS.md"};function s(n,e,c,l,d,m){return r(),t("div",null,e[0]||(e[0]=[o('<h2 id="target-operating-system-macos" tabindex="-1">Target operating system: macOS <a class="header-anchor" href="#target-operating-system-macos" aria-label="Permalink to &quot;Target operating system: macOS&quot;">​</a></h2><p>PCILeech is able to target macOS prior or equal to macOS Sierra. <strong>PCILeech is not able to target macOS High Sierra or later.</strong></p><p>By default macOS protects itself with Vt-d, preventing DMA attacks. There is however a setting in recovery mode, which is accessible by anyone unless a firmware password is set, do disable the Vt-d DMA protections. This setting has been removed in macOS High Sierra and as a result PCILeech no longer supports macOS High Sierra.</p><p>To disable Vt-d boot the mac, press Command+r at boot time, when the apple logo shows, to boot into recovery mode. Start a terminal and type <code>nvram boot-args=&quot;dart=0x0&quot;</code>. Vt-d should now be disabled and it will now be possible to attack macOS.</p><p>Apple have further information about <a href="https://developer.apple.com/library/mac/documentation/HardwareDrivers/Conceptual/ThunderboltDevGuide/DebuggingThunderboltDrivers/DebuggingThunderboltDrivers.html" target="_blank" rel="noreferrer">how to disable Vt-d</a> in macs prior to High Sierra.</p><p>Macs are most conveniently targeted by connecting PCILeech to the Thunderbolt or Thunderbolt3 ports of the mac with various adapters.</p><hr><h3 id="examples" tabindex="-1">Examples: <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples:&quot;">​</a></h3><p>Load macOS kernel module:</p><ul><li><code>pcileech.exe kmdload -kmd macos</code></li></ul><p>Remove macOS password requirement, requires a KMD is loaded. In this example 0x11abc000 is used.</p><ul><li><code>pcileech.exe macos_unlock -kmd 0x11abc000 -0 1</code></li></ul><p>In addition to the examples below please find additional built-in commands and macOS compatible implants starting with macos when executing <code>pcileech</code> without any parameters.</p>',13)]))}const u=a(i,[["render",s]]);export{h as __pageData,u as default};
